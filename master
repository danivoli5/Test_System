#pragma once
#include <direct.h>
using namespace std;
#include <string>
#include <iostream>
#include<fstream>
#include<Windows.h>
#include"Details.h"
#include "Teacher.h"

int Add_q(string name2, string semester2, string lecturer2, string subjects2, int year2, int difficulty2, string due, int length)
{

	cout << "Press enter when you ready to crop, In the end press CTRL+V in the word.doc" << endl;
	getchar();
	keybd_event(VK_LWIN, 0, 0, 0);
	keybd_event(VK_SHIFT, 0, 0, 0);
	keybd_event(0x53, 0, 0, 0);
	keybd_event(NULL, NULL, NULL, NULL);
	keybd_event(0, 0, 0, 0);
	Details temp(name2, semester2, lecturer2, subjects2, year2, difficulty2, due, length);
	temp.openInfo(name2, semester2, lecturer2, subjects2, year2, difficulty2, due, length);
	return 0;
}

void questions(int num)
{
	int words = 0;
	ifstream fin;
	ofstream stuff;
	stuff.open("new_test.txt");
	fin.open("question.txt", ios::in);
	char str[20];
	char my_character,num2;

	while (!fin.eof()) {

		fin.get(my_character);
		cout << my_character;
		if (my_character == ' ') {
			words++;
			if (words == 7) {
				cin.getline(str, 20);
				fin.get(num2);
				if (num == num2) {
					stuff << str;
				}
			}
		}
		
	}
	
}

int main()
{
	ofstream coor, student, teach,quest;
	quest.open("question.txt");
	quest.close();
	coor.open("coordinators.txt");
	coor.close();
	student.open("students.txt");
	student.close();
	teach.open("teacher.txt");
	teach.close();
	int person, index, index2, size1, size2;
	Details all;
	Details temp;
	ofstream file2;
	vector <string> coordinators;
	string tempStr;
	string name, semester, str, lecturer, subjects, due, Pname, sub, temp2, tempPass;
	int year, difficulty, num, x, length;
	long phone, pass, password;
	do
	{
		cout << "who are you? enter a number: \n 1.coordinator, 2.proffesor, 3.student\n";
		cin >> person;
		switch (person)
		{
		case 1:
			cout << "choose:\n1.enter a new teacher, 2.remove a teacher, 3.enter to your account, 4.creat an account" << endl;
			cout << "5.add a new student, 6. remove a student " << endl;
			cin >> index;
			if (index == 1)
			{
				cout << "enter the name: ";
				cin >> Pname;
				cout << "\nenter phone number: ";
				cin >> phone;
				cout << "\nenter subject: ";
				cin >> sub;
				cout << "\n enter password: ";
				cin >> pass;
				Teacher teacher(Pname, sub, phone, pass);
				teach.open("teacher.txt", ios::app);
				teach << Pname << endl;
				teach << pass << endl;
				teach.close();
			}
			if (index == 2)
			{
				//remove a teacher
			}
			if (index == 3)
			{
				cout << "enter your name and password:" << endl;
				cin >> Pname;
				cin >> tempPass;
				int k = 0;
				tempStr = Pname + ' ' + tempPass;
				for (int i = 0; i < coordinators.size(); i++) {
					if (strcmp(coordinators[i].c_str(), tempStr.c_str()) == 0) {
						k++;
					}
				}
				if (k != 1)
				{
					cout << "wrong name or password. please try again" << endl;
					break;
				}
				do
				{
					cout << "enter a number: 0. exit 1.add an answer 2.delete a question 3.add a question 4. open a question\n";
					cin >> num;
					switch (num)
					{
					case 1:
						//add an answer
						break;

					case 2:
						cout << "enter the name, semester, lecturer, subjects, due, year , difficulty and question length" << endl;
						cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty >> length;
						tempStr = name + ' ' + to_string(year) + ' ' + semester + ' ' + due + ' ' + lecturer + ' ' + subjects + ' ' + to_string(difficulty) + ' ' + to_string(length) + ' ' + ".docx";
						if (remove(tempStr.c_str()) != 0)
							perror("Error deleting file");
						else
							puts("File successfully deleted");
						file2.close();
						break;

					case 3:
						cout << "enter the name, semester, lecturer, subjects, due, year difficulty and question length" << endl;
						cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty, length;
						tempStr = name + ' ' + to_string(year) + ' ' + semester + ' ' + due + ' ' + lecturer + ' ' + subjects + ' ' + to_string(difficulty) + ' ' + to_string(length) + ' ' + ".docx";
						temp.addDetails(name, semester, lecturer, subjects, year, difficulty, due, length);
						all.addDetails(temp);
						quest.open("question.txt", ios::app);
						quest << tempStr << endl;
						quest.close();
						//x=Add_q(name, semester, lecturer, subjects, year, difficulty, due,length);
						//if(x==0)
						break;
					case 4:
						cout << "enter the name, semester, lecturer, subjects, due, year and difficulty and question length" << endl;
						cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty, length;
						all.openInfo(name, semester, lecturer, subjects, year, difficulty, due, length);
						break;
					}

				} while (num != 0);
			}
			if (index == 4)
			{
				cout << "enter your name : " << endl;
				cin >> Pname;
				cout << "enter password : " << endl;
				cin >> tempPass;
				coor.open("coordinators.txt", ios::app);
				coor << Pname << endl;
				coor << tempPass << endl;
				coor.close();
				tempStr = Pname + ' ' + tempPass;
				coordinators.push_back(tempStr);
			}
			if (index == 5)
			{
				cout << "enter name and password" << endl;
				cin >> Pname >> pass;
				student.open("students.txt", ios::app);
			}
			if (index == 6)
			{
				//remove student
			}
			break;

		case 2:
			cout << "enter 0 to exit, enter 1 to search a question, enter 2 to add a question, 3. build new test by length of question" << endl;
			cin >> index2;
			if (index2 == 0)
				break;
			else if (index2 == 1) {
				cout << "enter the name, semester, lecturer, subjects, due, year, difficulty and question length" << endl;
				cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty >> length;
				all.openInfo(name, semester, lecturer, subjects, year, difficulty, due, length);
				break;
			}
			else if (index2 == 2) {
				cout << "enter the name, semester, lecturer, subjects, due, year difficulty and question length" << endl;
				cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty>> length;
				temp.addDetails(name, semester, lecturer, subjects, year, difficulty, due, length);
				all.addDetails(temp);
				x = Add_q(name, semester, lecturer, subjects, year, difficulty, due, length);
				break;
			}
			else if (index2 == 3) {
				cout << "enter a length:" << endl;
				cin >> num;
				questions(num);
				break;
			}
		case 3:
			cout << "enter 0 to exit, enter 1 to search a question" << endl;
			cin >> index2;
			if (index2 == 0)
				break;
			else if (index2 == 1) {
				cout << "enter the name, semester, lecturer, subjects, due, year, difficulty and question length" << endl;
				cin >> name >> semester >> lecturer >> subjects >> due >> year >> difficulty >> length;
				all.openInfo(name, semester, lecturer, subjects, year, difficulty, due, length);
			}
			break;
		}
	} while (person != 0);

	return 0;
}
